name: Release 🚀

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "README.md"
      - "README-*.md"
      - ".github/ISSUE_TEMPLATE/*"

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: 📦 Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📚 Install dependencies
        run: npm ci

      - name: ⚙️ Install additional tools
        run: |
          if [[ "${{ matrix.os }}" == 'macOS-latest' ]]; then
            brew install python@3.11 python-setuptools
            brew install libtool automake autoconf
            sudo xcode-select --reset
            npm install -g node-gyp
          fi

      - name: 🚀 Install electron-builder
        run: npm install -g electron-builder

      - name: 🏗️ Publish the application
        env:
          GH_TOKEN: ${{ secrets.TOKEN }}
        run: |
          if [[ "${{ matrix.os }}" == 'ubuntu-latest' ]]; then
            npm run publish:linux
          elif [[ "${{ matrix.os }}" == 'windows-latest' ]]; then
            npm run publish:win
          elif [[ "${{ matrix.os }}" == 'macOS-latest' ]]; then
            npm run publish:mac
          fi
